//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Actions
    {
        
        private static SteamVR_Action_Boolean p_radialMenu_InteractUI;
        
        private static SteamVR_Action_Boolean p_radialMenu_Teleport;
        
        private static SteamVR_Action_Boolean p_radialMenu_GrabGrip;
        
        private static SteamVR_Action_Pose p_radialMenu_Pose;
        
        private static SteamVR_Action_Skeleton p_radialMenu_SkeletonLeftHand;
        
        private static SteamVR_Action_Skeleton p_radialMenu_SkeletonRightHand;
        
        private static SteamVR_Action_Single p_radialMenu_Squeeze;
        
        private static SteamVR_Action_Boolean p_radialMenu_HeadsetOnHead;
        
        private static SteamVR_Action_Boolean p_radialMenu_ActivateMenuLeft;
        
        private static SteamVR_Action_Boolean p_radialMenu_SelectLeft;
        
        private static SteamVR_Action_Vector2 p_radialMenu_MenuSelectionPositionLeft;
        
        private static SteamVR_Action_Vector2 p_radialMenu_MenuSelectionPositionRight;
        
        private static SteamVR_Action_Boolean p_radialMenu_SelectRight;
        
        private static SteamVR_Action_Boolean p_radialMenu_ActivateMenuRight;
        
        private static SteamVR_Action_Boolean p_radialMenu_GrabPinch;
        
        private static SteamVR_Action_Vibration p_radialMenu_Haptic;
        
        private static SteamVR_Action_Vector2 p_platformer_Move;
        
        private static SteamVR_Action_Boolean p_platformer_Jump;
        
        private static SteamVR_Action_Vector2 p_buggy_Steering;
        
        private static SteamVR_Action_Single p_buggy_Throttle;
        
        private static SteamVR_Action_Boolean p_buggy_Brake;
        
        private static SteamVR_Action_Boolean p_buggy_Reset;
        
        private static SteamVR_Action_Pose p_mixedreality_ExternalCamera;
        
        public static SteamVR_Action_Boolean radialMenu_InteractUI
        {
            get
            {
                return SteamVR_Actions.p_radialMenu_InteractUI.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean radialMenu_Teleport
        {
            get
            {
                return SteamVR_Actions.p_radialMenu_Teleport.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean radialMenu_GrabGrip
        {
            get
            {
                return SteamVR_Actions.p_radialMenu_GrabGrip.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose radialMenu_Pose
        {
            get
            {
                return SteamVR_Actions.p_radialMenu_Pose.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Skeleton radialMenu_SkeletonLeftHand
        {
            get
            {
                return SteamVR_Actions.p_radialMenu_SkeletonLeftHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Skeleton radialMenu_SkeletonRightHand
        {
            get
            {
                return SteamVR_Actions.p_radialMenu_SkeletonRightHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Single radialMenu_Squeeze
        {
            get
            {
                return SteamVR_Actions.p_radialMenu_Squeeze.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean radialMenu_HeadsetOnHead
        {
            get
            {
                return SteamVR_Actions.p_radialMenu_HeadsetOnHead.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean radialMenu_ActivateMenuLeft
        {
            get
            {
                return SteamVR_Actions.p_radialMenu_ActivateMenuLeft.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean radialMenu_SelectLeft
        {
            get
            {
                return SteamVR_Actions.p_radialMenu_SelectLeft.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 radialMenu_MenuSelectionPositionLeft
        {
            get
            {
                return SteamVR_Actions.p_radialMenu_MenuSelectionPositionLeft.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Vector2 radialMenu_MenuSelectionPositionRight
        {
            get
            {
                return SteamVR_Actions.p_radialMenu_MenuSelectionPositionRight.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean radialMenu_SelectRight
        {
            get
            {
                return SteamVR_Actions.p_radialMenu_SelectRight.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean radialMenu_ActivateMenuRight
        {
            get
            {
                return SteamVR_Actions.p_radialMenu_ActivateMenuRight.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean radialMenu_GrabPinch
        {
            get
            {
                return SteamVR_Actions.p_radialMenu_GrabPinch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vibration radialMenu_Haptic
        {
            get
            {
                return SteamVR_Actions.p_radialMenu_Haptic.GetCopy<SteamVR_Action_Vibration>();
            }
        }
        
        public static SteamVR_Action_Vector2 platformer_Move
        {
            get
            {
                return SteamVR_Actions.p_platformer_Move.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean platformer_Jump
        {
            get
            {
                return SteamVR_Actions.p_platformer_Jump.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 buggy_Steering
        {
            get
            {
                return SteamVR_Actions.p_buggy_Steering.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Single buggy_Throttle
        {
            get
            {
                return SteamVR_Actions.p_buggy_Throttle.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean buggy_Brake
        {
            get
            {
                return SteamVR_Actions.p_buggy_Brake.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean buggy_Reset
        {
            get
            {
                return SteamVR_Actions.p_buggy_Reset.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose mixedreality_ExternalCamera
        {
            get
            {
                return SteamVR_Actions.p_mixedreality_ExternalCamera.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        private static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[] {
                    SteamVR_Actions.radialMenu_InteractUI,
                    SteamVR_Actions.radialMenu_Teleport,
                    SteamVR_Actions.radialMenu_GrabGrip,
                    SteamVR_Actions.radialMenu_Pose,
                    SteamVR_Actions.radialMenu_SkeletonLeftHand,
                    SteamVR_Actions.radialMenu_SkeletonRightHand,
                    SteamVR_Actions.radialMenu_Squeeze,
                    SteamVR_Actions.radialMenu_HeadsetOnHead,
                    SteamVR_Actions.radialMenu_ActivateMenuLeft,
                    SteamVR_Actions.radialMenu_SelectLeft,
                    SteamVR_Actions.radialMenu_MenuSelectionPositionLeft,
                    SteamVR_Actions.radialMenu_MenuSelectionPositionRight,
                    SteamVR_Actions.radialMenu_SelectRight,
                    SteamVR_Actions.radialMenu_ActivateMenuRight,
                    SteamVR_Actions.radialMenu_GrabPinch,
                    SteamVR_Actions.radialMenu_Haptic,
                    SteamVR_Actions.platformer_Move,
                    SteamVR_Actions.platformer_Jump,
                    SteamVR_Actions.buggy_Steering,
                    SteamVR_Actions.buggy_Throttle,
                    SteamVR_Actions.buggy_Brake,
                    SteamVR_Actions.buggy_Reset,
                    SteamVR_Actions.mixedreality_ExternalCamera};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.radialMenu_InteractUI,
                    SteamVR_Actions.radialMenu_Teleport,
                    SteamVR_Actions.radialMenu_GrabGrip,
                    SteamVR_Actions.radialMenu_Pose,
                    SteamVR_Actions.radialMenu_SkeletonLeftHand,
                    SteamVR_Actions.radialMenu_SkeletonRightHand,
                    SteamVR_Actions.radialMenu_Squeeze,
                    SteamVR_Actions.radialMenu_HeadsetOnHead,
                    SteamVR_Actions.radialMenu_ActivateMenuLeft,
                    SteamVR_Actions.radialMenu_SelectLeft,
                    SteamVR_Actions.radialMenu_MenuSelectionPositionLeft,
                    SteamVR_Actions.radialMenu_MenuSelectionPositionRight,
                    SteamVR_Actions.radialMenu_SelectRight,
                    SteamVR_Actions.radialMenu_ActivateMenuRight,
                    SteamVR_Actions.radialMenu_GrabPinch,
                    SteamVR_Actions.platformer_Move,
                    SteamVR_Actions.platformer_Jump,
                    SteamVR_Actions.buggy_Steering,
                    SteamVR_Actions.buggy_Throttle,
                    SteamVR_Actions.buggy_Brake,
                    SteamVR_Actions.buggy_Reset,
                    SteamVR_Actions.mixedreality_ExternalCamera};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[] {
                    SteamVR_Actions.radialMenu_Haptic};
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[] {
                    SteamVR_Actions.radialMenu_Haptic};
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[] {
                    SteamVR_Actions.radialMenu_Pose,
                    SteamVR_Actions.mixedreality_ExternalCamera};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[] {
                    SteamVR_Actions.radialMenu_InteractUI,
                    SteamVR_Actions.radialMenu_Teleport,
                    SteamVR_Actions.radialMenu_GrabGrip,
                    SteamVR_Actions.radialMenu_HeadsetOnHead,
                    SteamVR_Actions.radialMenu_ActivateMenuLeft,
                    SteamVR_Actions.radialMenu_SelectLeft,
                    SteamVR_Actions.radialMenu_SelectRight,
                    SteamVR_Actions.radialMenu_ActivateMenuRight,
                    SteamVR_Actions.radialMenu_GrabPinch,
                    SteamVR_Actions.platformer_Jump,
                    SteamVR_Actions.buggy_Brake,
                    SteamVR_Actions.buggy_Reset};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[] {
                    SteamVR_Actions.radialMenu_Squeeze,
                    SteamVR_Actions.buggy_Throttle};
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[] {
                    SteamVR_Actions.radialMenu_MenuSelectionPositionLeft,
                    SteamVR_Actions.radialMenu_MenuSelectionPositionRight,
                    SteamVR_Actions.platformer_Move,
                    SteamVR_Actions.buggy_Steering};
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[] {
                    SteamVR_Actions.radialMenu_SkeletonLeftHand,
                    SteamVR_Actions.radialMenu_SkeletonRightHand};
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.radialMenu_InteractUI,
                    SteamVR_Actions.radialMenu_Teleport,
                    SteamVR_Actions.radialMenu_GrabGrip,
                    SteamVR_Actions.radialMenu_Squeeze,
                    SteamVR_Actions.radialMenu_HeadsetOnHead,
                    SteamVR_Actions.radialMenu_ActivateMenuLeft,
                    SteamVR_Actions.radialMenu_SelectLeft,
                    SteamVR_Actions.radialMenu_MenuSelectionPositionLeft,
                    SteamVR_Actions.radialMenu_MenuSelectionPositionRight,
                    SteamVR_Actions.radialMenu_SelectRight,
                    SteamVR_Actions.radialMenu_ActivateMenuRight,
                    SteamVR_Actions.radialMenu_GrabPinch,
                    SteamVR_Actions.platformer_Move,
                    SteamVR_Actions.platformer_Jump,
                    SteamVR_Actions.buggy_Steering,
                    SteamVR_Actions.buggy_Throttle,
                    SteamVR_Actions.buggy_Brake,
                    SteamVR_Actions.buggy_Reset};
        }
        
        private static void PreInitActions()
        {
            SteamVR_Actions.p_radialMenu_InteractUI = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/RadialMenu/in/InteractUI")));
            SteamVR_Actions.p_radialMenu_Teleport = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/RadialMenu/in/Teleport")));
            SteamVR_Actions.p_radialMenu_GrabGrip = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/RadialMenu/in/GrabGrip")));
            SteamVR_Actions.p_radialMenu_Pose = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/RadialMenu/in/Pose")));
            SteamVR_Actions.p_radialMenu_SkeletonLeftHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/RadialMenu/in/SkeletonLeftHand")));
            SteamVR_Actions.p_radialMenu_SkeletonRightHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/RadialMenu/in/SkeletonRightHand")));
            SteamVR_Actions.p_radialMenu_Squeeze = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/RadialMenu/in/Squeeze")));
            SteamVR_Actions.p_radialMenu_HeadsetOnHead = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/RadialMenu/in/HeadsetOnHead")));
            SteamVR_Actions.p_radialMenu_ActivateMenuLeft = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/RadialMenu/in/ActivateMenuLeft")));
            SteamVR_Actions.p_radialMenu_SelectLeft = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/RadialMenu/in/SelectLeft")));
            SteamVR_Actions.p_radialMenu_MenuSelectionPositionLeft = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/RadialMenu/in/MenuSelectionPositionLeft")));
            SteamVR_Actions.p_radialMenu_MenuSelectionPositionRight = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/RadialMenu/in/MenuSelectionPositionRight")));
            SteamVR_Actions.p_radialMenu_SelectRight = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/RadialMenu/in/SelectRight")));
            SteamVR_Actions.p_radialMenu_ActivateMenuRight = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/RadialMenu/in/ActivateMenuRight")));
            SteamVR_Actions.p_radialMenu_GrabPinch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/RadialMenu/in/GrabPinch")));
            SteamVR_Actions.p_radialMenu_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create<SteamVR_Action_Vibration>("/actions/RadialMenu/out/Haptic")));
            SteamVR_Actions.p_platformer_Move = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/platformer/in/Move")));
            SteamVR_Actions.p_platformer_Jump = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/platformer/in/Jump")));
            SteamVR_Actions.p_buggy_Steering = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/buggy/in/Steering")));
            SteamVR_Actions.p_buggy_Throttle = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/buggy/in/Throttle")));
            SteamVR_Actions.p_buggy_Brake = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/buggy/in/Brake")));
            SteamVR_Actions.p_buggy_Reset = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/buggy/in/Reset")));
            SteamVR_Actions.p_mixedreality_ExternalCamera = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/mixedreality/in/ExternalCamera")));
        }
    }
}
